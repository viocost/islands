; !machine <identifier>
; begin-region <identifier>
; entry-state <identifier> | entry-then-history <identifier>
; define-state <identifier>
;   opt: has-tag <identifier> OR has-tag* <identifer ...> *end
;   OPT: on-entry <action-identifier> | has-action* <identifier ....> *end
;   OPT: on-exit  <action-identifier> | has-action* <identifier ....> *end
;   opt <identifier> ; TRANSITION MESSAGE NAME
;      opt: has-action <identifier> OR has-action* <identifier ...> *end
;      opt: has-guard <identifier>  OR has-guard* <identifier ...> *end
;      opt: transitions-to <identifier>
;   OPT begin-region <recurses> end-region
; ...
; end-region

!agent ComplexAgent1
begin-region r_1

  entry-state off

  define-state off
    on-entry
      has-action turn_off_light
    flick_switch
      has-guard* has_power *end
      has-action play_click_sound
      transitions-to on
    power_lamp
      has-action* set_has_power play_beep *end
    depower_lamp
      has-action clear_has_power

  define-state on
    on-entry
      has-action turn_on_light
    flick_switch
      has-action play_click_sound
      transitions-to off
    depower_lamp
      has-action clear_has_power
      transitions-to off

end-region
begin-region r_2

  entry-then-history s1

  define-state s1
    on-exit has-action action_1
    msg_1 transitions-to s2

  define-state s2
    begin-region nested_1
      entry-state es1
      define-state es1
        msg_1 has-action do_action_1
        msg_2 has-action do_action_2
    end-region
    msg_1 transitions-to s3
    msg_2 transitions-to s1

  define-state s3
    msg_1 transitions-to s1

end-region